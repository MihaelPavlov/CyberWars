#pragma checksum "C:\Users\Owner\Documents\CyberWars\Web\CyberWars.Web\Views\Web\Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "f5743ed2c6b28e03b11f701f3d4143e22420f978"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Web_Index), @"mvc.1.0.view", @"/Views/Web/Index.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "C:\Users\Owner\Documents\CyberWars\Web\CyberWars.Web\Views\_ViewImports.cshtml"
using CyberWars.Web;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\Owner\Documents\CyberWars\Web\CyberWars.Web\Views\_ViewImports.cshtml"
using CyberWars.Common;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "C:\Users\Owner\Documents\CyberWars\Web\CyberWars.Web\Views\_ViewImports.cshtml"
using CyberWars.Web.ViewModels;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"f5743ed2c6b28e03b11f701f3d4143e22420f978", @"/Views/Web/Index.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"817b1bf833c597f1aef1f75736ab429014bd2584", @"/Views/_ViewImports.cshtml")]
    public class Views_Web_Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            WriteLiteral(@"<div class=""containerFlex"">
    <div class=""containerBox"">
        <h2>Hunt Programmer</h2>
        <p class=""descriptionWeb"">The dark Web is a place where you can attack or expose other player For now :3 </p>
        <div class=""containerButton"">
            <img src=""/images/Web/darkwebIcon.png""");
            BeginWriteAttribute("alt", " alt=\"", 303, "\"", 309, 0);
            EndWriteAttribute();
            WriteLiteral(">\r\n            <a class=\"btn yellow rounded\" href=\"/DarkWeb/Attack\">Dark Web</a>\r\n            <img src=\"/images/Web/darkwebIcon2.png\"");
            BeginWriteAttribute("alt", " alt=\"", 443, "\"", 449, 0);
            EndWriteAttribute();
            WriteLiteral(@">
        </div>
    </div>

    <div class=""containerBox2"">
        <h2>Freelancing</h2>
        <p class=""descriptionWeb"">Freelance job is where person works for themself rather than for a company</p>
        <div class=""containerButton"">
            <img class=""frellancImg"" src=""/images/Web/jobIcon.png""");
            BeginWriteAttribute("alt", " alt=\"", 765, "\"", 771, 0);
            EndWriteAttribute();
            WriteLiteral(">\r\n            <a class=\"btn yellow rounded\" href=\"/Web/Job\">Frellancing</a>\r\n            <img class=\"frellancImg\" src=\"/images/Web/jobIcon2.png\"");
            BeginWriteAttribute("alt", " alt=\"", 917, "\"", 923, 0);
            EndWriteAttribute();
            WriteLiteral(">\r\n            <img src=\"/images/Web/freelancingLogo.png\"");
            BeginWriteAttribute("alt", " alt=\"", 981, "\"", 987, 0);
            EndWriteAttribute();
            WriteLiteral(@">
        </div>
    </div>

    <div class=""containerBox3"">
        <h2>Competitive Coding</h2>
        <p class=""descriptionWeb"">You can use C,C++,Java, C# every programming language and join in the contest.</p>
        <div class=""containerButton"">
            <a class=""btn yellow rounded"" href=""/CompetitiveCoding/Index"">Join Coding</a>

        </div>
    </div>
</div>
");
            DefineSection("CssFile", async() => {
                WriteLiteral("\r\n    <link rel=\"stylesheet\" href=\"/css/Web/web.css\">\r\n");
            }
            );
            WriteLiteral("\r\n");
            DefineSection("PageHeader", async() => {
                WriteLiteral("\r\n    Web\r\n");
            }
            );
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
