@using CyberWars.Web.ViewModels.Team;
@using CyberWars.Data.Common.Repositories;
@using CyberWars.Data.Models.Teams;
@using System.Security.Claims;
@using CyberWars.Data.Models;
@using Microsoft.EntityFrameworkCore;
@using CyberWars.Data.Models.Player;

@model TeamPageViewModel

@inject IDeletableEntityRepository<Team> teamRepository;
@inject IDeletableEntityRepository<TeamPlayer> teamPlayerRepository;
@inject IDeletableEntityRepository<ApplicationUser> userRepository;
@inject IDeletableEntityRepository<Player> playerRepository;

@{
    var userId = this.User.FindFirstValue(ClaimTypes.NameIdentifier);

    var isUserHaveTeam = await this.teamRepository.All().FirstOrDefaultAsync(x => x.UserId == userId);

    var player = await this.playerRepository.All().FirstOrDefaultAsync(x => x.UserId == userId);

    var teamPlayer = await this.teamPlayerRepository.All().FirstOrDefaultAsync(x => x.PlayerId == player.Id);
}
<div class="tableTeam">
    <div>
        <img class="teamIcon" src="/TeamImages/@Model.Image" alt="teamImage">
        <p class="teamName">@Model.Name [@Model.TeamPlayers.Count()]</p>
        <img class="teamBadges" src="/images//Player/Badges/CommingSoon.png" alt="">
    </div>
    <table class="teamStats">
        <tr class="stat">
            <td class="label">LeaderName:</td>
            <td class="input">@Model.LeaderName</td>
        </tr>
        <tr class="stat">
            <td class="label">Motivational Motto:</td>
            <td class="input">@Model.MotivationalMotto</td>
        </tr>
        <tr class="stat">
            <td class="label">Rank:</td>
            <td class="input">@Model.Rank</td>
        </tr>
        <tr class="stat">
            <td class="label">Members:</td>
            <td class="input">
                <div>
                    <br>
                    @foreach (var playerInTeam in Model.TeamPlayers)
                    {
                        <a href="/Home/PlayerView?playerName=@playerInTeam.PlayerName">@playerInTeam.PlayerName</a>
                        <br>
                    }
                </div>
            </td>

        </tr>
    </table>

    @if (isUserHaveTeam != null && Model.UserId==userId)
    {
        <form method="post" asp-controller="Team" asp-action="Abandon">
            <div class="leaveFromGroupButton">
                <button type="submit" class="btn dark-blue rounded" name="teamId" value="@Model.Id">Abandon</button>
            </div>
        </form>

    }
    else if (teamPlayer != null)
    {
        <form method="post" asp-controller="Team" asp-action="LeaveGroup">

            <div class="leaveFromGroupButton">
                <button type="submit" class="btn dark-blue rounded" name="teamId" value="@Model.Id">Leave</button>
            </div>
        </form>
    }
    else if (isUserHaveTeam == null && teamPlayer == null)
    {
        <form method="post" asp-controller="Team" asp-action="ApplyToTeam">
            <div class="leaveFromGroupButton">
                <button type="submit" class="btn dark-blue rounded" name="teamId" value="@Model.Id">Apply</button>
            </div>

        </form>
    }
    else
    {


    }
</div>

@section CssFile {
    <link rel="stylesheet" href="/css/Team/teamPage.css">
}
@section PageHeader{
    Team
}